{
  "hash": "92c4f187adfb0450e232cbd3019a22ea",
  "result": {
    "markdown": "# Methods\n\n\n\n\n\n<!-- BJ !-->\n\n<!-- CK !-->\n\n@fairface\n\n## The Big Picture\n\n-   Is bias prevalent in facial recognition machine learning models?\n-   Can one model be shown to have statistically significant less bias than the other?\n-   Does one model outperform the other in a statistically significant manner, in all aspects?\n-   Does one model outperform the other in a statistically significant manner, in certain aspects?\n    -   This is where we can dive into \"conventional\" bias\n\n::: callout-note\n## Thoughts on Bias\n\nWe need to be careful how we define and use bias. Statistical bias is essentially error, and we could be crossing our definitions between statistical bias and conventional bias.\n:::\n\n## Measuring Performance\n\n::: callout-note\nThis performance section is important in choosing the correct models to ensure data integrity, however for the actual statistical tests, we'll focused on more common statistics like mean and proportion.\n:::\n\nThere are four main measures of performance when evaluating a model:\n\n-   **Accuracy**\n-   **Precision**\n-   **Recall**\n-   **F1-Score**\n\nEach of these performance measures has their own place in evaluating models, however, to begin to explain the differences between these models we should start with concepts of positive and negative outcomes.\n\n-   **True Positive:** predicted positive, was actually positive (correct)\n-   **False Positive:** predicted positive, was actually negative (incorrect)\n-   **True Negative:** predicted negative, was actually negative (correct)\n-   **False Negative:** predicted negative, was actually positive (incorrect)\n\nThese outcomes can be visualized on a confusion matrix. In the image below, green are correct predictions while red are incorrect predictions.\n\n![confusion_matrix](images/confusion_matrix.png)\n\n### Accuracy\n\n**Accuracy** is the ratio of correct predictions to all predictions. In other words, the total of the green squares divided by the entire matrix. This is arguably the most common concept of measuring performance.\n\n$Acccuracy = \\frac{TP+TN}{TP + TN + FN}$\n\n### Precision\n\n**Precision** is the ratio of true positives to the total number of positives (true positive + true negative).\n\n$Precision = \\frac{TP}{TP+FP}$\n\n### Recall\n\n**Recall** is the ratio of true positives to the number of total correct predictions (true positive + false negative).\n\n$Recall = \\frac{TP}{TP+FN}$\n\n### F1-Score\n\n**F1-Score**\\* is known as the harmonic mean between precision and recall. **Precision** and **Recall** are useful in their own rights, but the f1-Score is useful in the fact it's a balanced combination of both precision and recall.\n\nF1-Score $= \\frac{2 * Precision * Recall}{Precision + Recall}$\n\n## Hypothesis Testing\n\nOur data consists of three main sets, the source input data, the Fairface output data, and the Deepface output data.\n\nWe'll be creating our hypothesis tests by treating the source data as the basis for the original assumptions (our *null hypotheses*), and then using the output from Fairface and Deepface to test for statistically significant differences. Gaining a statistically significant result would allow us to reject our *null hypothesis* in favor of the *alternative hypothesis*. In other words, rejecting the original assumption means there is a statistically large enough difference between the source data and output data, and could indicate a bias in model.\n\nWe'll be testing across different subsets contained within the data, as listed below:\n\n### Demographics\n\n-   Age Group\n-   Gender\n-   Race\n\n### Demographics' Subgroups\n\n+ Age Group (9 groups)\n  + 0-2\n  + 3-9\n  + 10-19\n  + 20-29\n  + 30-39\n  + 40-49\n  + 50-59\n  + 60-69\n  + 70-130\n+ Gender (2 groups)\n  + Female\n  + Male\n+ Race (5 groups)\n  + Asian\n  + Black\n  + Indian\n  + Other\n  + White\n\n### The General Proportion Tests\n\nOur hypothesis tests will be testing different proportions within these subgroups between the source data and the output data.\n\nThe general format of our hypothesis tests will be:\n\n$H_0: p = p_{\\text{Source Data Subset}}$\n\n$H_A: p \\neq p_{\\text{Source Data Subset}}$\n\nWith the following test statistic:\n\n$\\frac{\\sqrt{n}(\\hat{p} - p)}{\\sqrt{p(1 - p)}}$\n\nWith the p-value being calculated by:\n\n$P(|Z| > \\hat{p} | H_0)$\n\n$= P(|Z| > \\frac{\\sqrt{n}(\\hat{p} - p)}{\\sqrt{p(1 - p)}})$,\n\nwhere\n\n- $n$: output data subset size\n- $\\hat{p}$: output data subset proportion\n- $p$: source data subset proportion\n\n### Notation\n\nBefore we list the specific tests, we should introduce some notation.\n\nLet $R$ be race, then $R \\in \\{Asian, Black, Indian, Other, White\\} = \\{A, B, I, O, W\\}$\n\nLet $G$ be gender, then $G \\in \\{Female, Male\\} = \\{F, M\\}$\n\nLet $A$ be age, then $A \\in \\{[0,2], [3,9], [10,19], [20,29], [30,39], [40,49], [50,59], [60,69], [70,130]\\} = \\{1, 2, 3, 4, 5, 6, 7, 8, 9\\}$\n\nLet $D$ be the dataset, then $D \\in \\{Source, Fairface, Deepface\\} = \\{D_0, D_f, D_d\\}$\n\n\n### More Specific Proportion Tests\n\nUsing this notation, we can simplify our nomenclature for testing a certain proportion of an overall demographic.\n\nFor example, we can test if the proportion of *Female* in the Fairface output is statistically different than the proportion of *Female* from the source.\n\nHypothesis Test:\n\n$H_0: p_F = p_{F|D_0}$\n\n$H_A: p_F \\neq p_{F|D_0}$\n\nP-value Calculation:\n\n$P(|Z| > \\frac{\\sqrt{n}(\\hat{p} - p)}{\\sqrt{p(1 - p)}})$,\n\nwhere\n\n- $p = p_{F|D_0}$: proportion of females from the source data\n- $\\hat{p} = p_{F|D_f}$: proportion of females from the fairface output\n- $n = n_{F \\cup M|D_f}$: number of data points in the gender subset form the fairface output\n\n\nAdditionally, we could test for different combinations of subsets within demographics. For instance, if we wanted to test for a statistically significant difference between the proportion of those who *Female*, given that they were *Black*, then we could write a hypothesis test like:\n\n$H_0: p_{F|B} = p_{F|D_0 \\cap B}$\n\n$H_A: p_{F|B} \\neq p_{F|D_0 \\cap B}$\n\nP-value Calculation:\n\n$P(|Z| > \\frac{\\sqrt{n}(\\hat{p} - p)}{\\sqrt{p(1 - p)}})$,\n\nwhere\n\n- $p = p_{F|D_0 \\cap B}$: proportion of females from the source data, given they were black\n- $\\hat{p} = p_{F|D_f \\cap B}$: proportion of females from the fairface output, given they were black\n- $n = n_{F \\cup M|D_f \\cap B}$: number of data points in the gender subset form the fairface output, given they were black.\n\nThese were two specific hypothesis tests, however, we'll be testing many combinations of these parameters and reporting back on any significant findings.\n\n\n::: callout-note\n## From the report requirements\n\nAlso can be called \"Analyses\"\n\nThis section might contain several subsections as needed.\n\n-   At least one subsection should describe the exploratory data analysis you did.\n\n-   What modifications were necessary to make the dataset ready for analysis? (e.g. dealing with missing values, removing certain rows, replacing/cleaning text values, binning, etc)\n\n-   Describe the analyses you did to answer the question of interest. **Explain why you believe these methods are appropriate.**\n\n-   At least one subsection should describe the exploratory data analysis you did.\n\n-   What modifications were necessary to make the dataset ready for analysis? (e.g. dealing with missing values, removing certain rows, replacing/cleaning text values, binning, etc)\n\n-   Describe the analyses you did to answer the question of interest. **Explain why you believe these methods are appropriate.**\n\n-   At least one subsection should describe the exploratory data analysis you did.\n\n-   What modifications were necessary to make the dataset ready for analysis? (e.g. dealing with missing values, removing certain rows, replacing/cleaning text values, binning, etc)\n\n-   Describe the analyses you did to answer the question of interest. **Explain why you believe these methods are appropriate.**\n\nSome methods we learn in this class include distribution comparison, correlation analysis, and hypothesis testing. You are required to include hypothesis tests into the project, but feel free to use additional methods to tell a good story about the data.\n:::\n\n## Standardizing output\n\nThe model outputs for both FairFace and DeepFace do not conform to the categories provided within the University of Tennessee - Knoxville (UTK) dataset.  We elected to take the outputs from each model and modify them based upon the categories specified in the UTK dataset, namely:\n\n* \"[race] is an integer from 0 to 4, denoting White, Black, Asian, Indian, and Others (like Hispanic, Latino, Middle Eastern).\"\n\n* \"[gender] is either 0 (male) or 1 (female)\"\n\n* \"[age] is an integer from 0 to 116, indicating the age\"\n\n### From FairFace\n\n* **Race**: The FairFace classification model had two options - one for \"fair7\" and one for \"fair4.\"  The latter provided predictions of race in the following categories:  [White, Black, Asian, Indian].  Of key note, the model omitted \"Other\" categories as listed in the race category for the UTK dataset.  However, the \"fair7\" model provides predictions across [White, Black, Latino_Hispanic, East Asian, Southeast Asian, Indian, Middle Eastern].  We elected to use the the fair7 model, and to refactor the output categories to match those of the UTK dataset. Namely, we refactored instances of Middle Eastern and Latino_Hispanic as \"Other,\" and instances of \"East Asian\" and \"Southeast Asian\" as \"Asian\"\n\n* **Age**: FairFace only provides a predicted age range as opposed to a specific, single, predicted age as a string.  To enable comparison of actual values to the predicted values, we maintained this column as a categorical variable, and split it into a lower and upper bound of predicted age as an integer.  This split will allow us to determine whether or not the prediction correctly binned the age (i.e. $lowerBound \\leq actualAge \\leq upperBound$), and if not - how far outside of those bounds the actual age lay.\n\n* **Gender**: no change to outputs of \"Male\" and \"Female.\"\n\n### From DeepFace\n\n* **Race**: Racial categorical output from DeepFace includes the following categories [\"middle eastern\", \"asian\", \"white\", \"latino hispanic\", \"black\", \"indian\"]\n\n* **Age**: DeepFace provides a prediction of a single, specific, predicted age.  We elected to match the predicted age to be the same range as would be predicted by Fair Face. For example, if DeepFace predicts an age like \"19,\" we assign it the same matching category as it would have in FairFace - \"10-19.\" From there, we also split this category into an upper and lower bound.  In spite of the fact that DeepFace does not provide any bounds or ranges on its age prediction outputs, to have a similar and fair comparison of both models, we give it those same upper and lower bounds for equitable comparison.\n\n* **Gender**: DeepFace outputs are \"Man\" and \"Woman\", and we refactor those values to \"Male\" and \"Female\" respectively.\n\n## Evaluating Permutations of Inputs and Models for Equitable Evaluation\n\nAside from the differences in the outputs of each model in terms of age, race, and gender, there are also substantial differences between FairFace and DeepFace in terms of their available settings when attempting to categorize an image in each of these categories.\n\nThe need for this permutation evaluation rose from some initial scripting and testing of these models on a small sample of images from another facial dataset - the Asian Face Age Dataset (need citation here).  We immediately grew concerned with DeepFace's performance using default settings (namely, enforcing requirement to detect a face prior to categorization, and using OpenCV as the default detection backend).  Running these initial scripting tests, we encountered a failure rate in DeepFace of approximately 70% in identifying and categorizing an image of a face.\n\nWe performed further exploratory analysis on both models in light of these facts, and sought some specific permutations of settings to determine what settings may provide the most fair and equitable comparison of the models prior to proceeding to further analysis.\n\n### DeepFace Analysis Options\n\nDeepFace has a robust degree of avaialble settings when performing facial categorization and recognition.  These include enforcing facial detection prior to classification of an image, as well as 8 different facial detection models to detect a face prior to categorization.  The default of these settings is OpenCV detection with detection enabled.  Other detection backends include ssd, dlib, mtcnn, retinaface, mediapipe, yolov8, yunet, and fastmtcnn.  \n    \nIn a Python 3.8 environment, attempting to run detections using dlib, retinaface, mediapipe, yolov8, and yunet failed to run, or failed to install the appropriate models directly from source during exeuction.  Repairing any challenges or issues with the core functionality of DeepFace and FairFace's code is outside the scope of our work, and as such, we have excluded any of these non-functioning models from our permutation evaluation.\n\n### FairFace Analysis Options\n\nThe default script from FairFace provided no options via its command line script to change settings.  It uses dlib/resnet34 models for facial detection and image pre-processing, and uses its own fair4 and fair7 models for categorization.  There are no other options or flags that can be set by a user when processing a batch of images. \n    \nWe converted the simple script to a class in Python without addressing any feature bugs or errors in the underlying code.  This change provided us some additional options when performing the analysis of an input image using FairFace - namely, the ability to analyze and categorize an image with or without facial detection, similar to the functionality of DeepFace.  FairFace remains limited in the fact that is only detection model backend is built in dlib, but this change gives us more options when considering what type of images to use and what settings to use on both models before generating our final dataset for analysis.\n\n### Specific Permutations\n\nWith the above options in mind, we designed the following permutations for evaluation on a subset of the UTK dataset:\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Detection </th>\n   <th style=\"text-align:left;\"> Detection Model </th>\n   <th style=\"text-align:left;\"> Image Source </th>\n   <th style=\"text-align:left;\"> Results Output </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Enabled </td>\n   <td style=\"text-align:left;\"> FairFace=Dlib; DeepFace=OpenCV </td>\n   <td style=\"text-align:left;\"> Pre-cropped </td>\n   <td style=\"text-align:left;\"> new_ff_c_p.csv, crop_df_p_opencv.csv </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Enabled </td>\n   <td style=\"text-align:left;\"> FairFace=Dlib; DeepFace=OpenCV </td>\n   <td style=\"text-align:left;\"> In-The-Wild </td>\n   <td style=\"text-align:left;\"> new_ff_uc_p.csv, uncropped_df_p_opencv.csv </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Enabled </td>\n   <td style=\"text-align:left;\"> FairFace=Dlib; DeepFace=mtcnn </td>\n   <td style=\"text-align:left;\"> Pre-cropped </td>\n   <td style=\"text-align:left;\"> new_ff_c_p.csv, crop_df_p_mtcnn.csv </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Enabled </td>\n   <td style=\"text-align:left;\"> FairFace=Dlib; DeepFace=mtcnn </td>\n   <td style=\"text-align:left;\"> In-The-Wild </td>\n   <td style=\"text-align:left;\"> new_ff_uc_p.csv, uncropped_df_p_mtcnn.csv </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Disabled </td>\n   <td style=\"text-align:left;\"> FairFace,DeepFace=None </td>\n   <td style=\"text-align:left;\"> Pre-cropped </td>\n   <td style=\"text-align:left;\"> new_ff_c_np.csv, cropped_df_np.csv </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Disabled </td>\n   <td style=\"text-align:left;\"> FairFace,DeepFace=None </td>\n   <td style=\"text-align:left;\"> In-The-Wild </td>\n   <td style=\"text-align:left;\"> new_ff_uc_np.csv, uncropped_df_np.csv </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nWe processed each of the above setting permutations againnst approximately 9800 images, consisting of images from part 1 of 3 from the UTK datset.  Each of the cropped images (cropped_UTK_dataset.csv) and uncropped images (uncropped_UTK_dataset.csv) came from the same underlying subject in each image; the only difference between each image was whether or not it was pre-processed before evaluation by each model.\n\n<!--End PC!-->\n\n### Permutation Sample Results (LN & DV)\n\n(enforcement of facial detection, detection backend model, and cropped images vs. faces in-the-wild)\n\n### Setting Selection\n<!-- PC -->\n\nUpon completion of our evaluation, we determined the settings that gave both models the best chance of success included enabling facial detection with mtcnn for DeepFace and Dlib for FairFace on uncropped images.\n\nFrom there, we proceeded to process the entirety of the UTK dataset using these settings.  The only exception are 4 images that did not conform to UTK's naming convention to identify age, gender, and race of the subject in the image.\n\nWe wrote a script, MasterScript.py, to enable us to perform batch iteration of images and generate output files.  When processing, we generated both the non-normalized output content and normalized output content.\n\nDue to the resource-intensive design of FairFace, our script enables multiprocessing of FairFace to allow for multiple simultaneous instances of the FairFace class as a pool of worker threads to iterate over all of the source data.\n\nWe attempted the same methodology for DeepFace, but encountered issues with silent errors and halting program execution when iterating over all images using DeepFace.  To alleviate this challenge, we processed DeepFace in a single-threaded manner, and with smaller portions of the dataset vs. pursuing an all-in-one go execution.  We proceeded to store the data for each of these smaller runs in multiple output files to combine once we completed all processing requirements.\n\nThe following table outlines the output files.  \n\n::: {.cell}\n\n:::\n\n\nThe last file, MasterDataFrame.csv, is the final output of our evaluation.  This file is in the following format, with the following column definitions: \n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Column Name </th>\n   <th style=\"text-align:left;\"> Definition </th>\n   <th style=\"text-align:left;\"> Data Type </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> img_path </td>\n   <td style=\"text-align:left;\"> Relative path location of the file within the UTK dataset </td>\n   <td style=\"text-align:left;\"> character vector </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> file </td>\n   <td style=\"text-align:left;\"> The filename of each file within the UTK dataset </td>\n   <td style=\"text-align:left;\"> character vector </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> src_age </td>\n   <td style=\"text-align:left;\"> The age of the subject in each image from the UTK dataset </td>\n   <td style=\"text-align:left;\"> integer </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> src_gender </td>\n   <td style=\"text-align:left;\"> The gender of the subject in each image from the UTK dataset </td>\n   <td style=\"text-align:left;\"> character vector </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> src_race </td>\n   <td style=\"text-align:left;\"> The race of the subject in each image from the UTK datset </td>\n   <td style=\"text-align:left;\"> character vector </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> src_timestamp </td>\n   <td style=\"text-align:left;\"> The time at which the image was submitted to the UTK dataset </td>\n   <td style=\"text-align:left;\"> character vector </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> src_age_grp </td>\n   <td style=\"text-align:left;\"> The age group (matching age ranges from the FairFace outputs) for each image in the UTK dataset </td>\n   <td style=\"text-align:left;\"> character vector </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> pred_model </td>\n   <td style=\"text-align:left;\"> The model used to produce the predicted output (FairFace or DeepFace) </td>\n   <td style=\"text-align:left;\"> character vector </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> pred_race </td>\n   <td style=\"text-align:left;\"> The race of the subject in the image predicted by the given prediction model </td>\n   <td style=\"text-align:left;\"> character vector </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> pred_gender </td>\n   <td style=\"text-align:left;\"> The gender of the subject in the image predicted by the given prediction model </td>\n   <td style=\"text-align:left;\"> character vector </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> pred_age_DF_only </td>\n   <td style=\"text-align:left;\"> The integer-predicted age by DeepFace of the subject in the image </td>\n   <td style=\"text-align:left;\"> integer </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> pred_age_grp </td>\n   <td style=\"text-align:left;\"> The age group of the subject in the image predicted by the given prediction model </td>\n   <td style=\"text-align:left;\"> character vector </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> pred_age_lower </td>\n   <td style=\"text-align:left;\"> The integer lower bound of the predicted age group </td>\n   <td style=\"text-align:left;\"> integer </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> pred_age_upper </td>\n   <td style=\"text-align:left;\"> The integer upper bound of the predicted age group </td>\n   <td style=\"text-align:left;\"> integer </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n",
    "supporting": [
      "methods_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}